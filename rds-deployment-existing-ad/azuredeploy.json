{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.westus.cloudapp.azure.com/RDWeb"
        },
        "defaultValue": "altdesktop"
      },
        "adDomainName": {
            "type": "string",
            "metadata": {
                "description": "The name of the AD domain. For example contoso.com"
            },
            "defaultValue": "desktop.alttechnologies.com"
        },
        "adVnetName": {
            "type": "string",
            "metadata": {
                "description": "The vnet name of AD domain. For example johnvnet1"
            },
            "defaultValue": "alt-vnet-p"
        },
        "adSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The subnet name of AD domain. For example johnsubnet1"
            },
            "defaultValue": "alt-ad"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example johnadmin"
            },
            "defaultValue": "sentia-admin"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the administrator account of the new VM and the domain"
            },
            "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
        },
        "imageSKU": {
            "type": "string",
            "allowedValues": [
                "2012-R2-Datacenter",
                "2016-Datacenter"
            ],
            "metadata": {
                "description": "Windows server SKU"
            },
            "defaultValue": "2016-Datacenter"
        },
        "numberOfRdshInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of RemoteDesktopSessionHosts"
            }
        },
      "rdshVmSize": {
        "type": "string",
        "metadata": {
          "description": "The size of the RDSH VMs"
        },
        "defaultValue": "Standard_DS2_v2"
      }
    },
  "variables": {
    "gwdnsLabelPrefix": "altrdgw",
    "cbdnsLabelPrefix": "altrdcb",
    "storageAccountName": "altrdsfarm",
    "storageAccountType": "Standard_LRS",
    "uniqueStorageAccountContainerName": "altrdsfarmvhds",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "dnsServerPrivateIp": "10.50.3.20",
    "subnet-id": "/subscriptions/7abdac23-f45e-4cc0-a9e6-6652ac9cf1a7/resourceGroups/ALT-AD/providers/Microsoft.Network/virtualNetworks/ALT-VNET-P/subnets/ALT-RDS",
    "publicIpRef": "publicIp",
    "brokerIpRef": "brokerpublicIp",
    "gatewayIpRef": "gatewaypublicIp",
    "assetLocation": "https://github.com/esnijder/azure_arm_templates/raw/master/rds-deployment-existing-ad/"
  },
    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpRef')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gatewayIpRef')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('gwdnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('brokerIpRef')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('cbdnsLabelPrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "gw-availabilityset",
            "location": "[resourceGroup().location]"
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "cb-availabilityset",
            "location": "[resourceGroup().location]"
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "rdsh-availabilityset",
            "location": "[resourceGroup().location]"
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/loadBalancers",
            "name": "rdgwloadbalancer",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIpRef'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "RDGWLBFE",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpRef'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "RDGWLBBAP"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRule443",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadbalancer'),'/frontendIPConfigurations/RDGWLBFE')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadbalancer'),'/backendAddressPools/RDGWLBBAP')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "SourceIPProtocol",
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadbalancer'),'/probes/tcpProbe443')]"
                            }
                        }
                    },
                    {
                        "name": "LBRule3391",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadbalancer'),'/frontendIPConfigurations/RDGWLBFE')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadbalancer'),'/backendAddressPools/RDGWLBBAP')]"
                            },
                            "protocol": "Udp",
                            "frontendPort": 3391,
                            "backendPort": 3391,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "SourceIPProtocol",
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadbalancer'),'/probes/tcpProbe3391')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpProbe443",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "tcpProbe3391",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 3391,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "rdp",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadBalancer'),'/frontendIPConfigurations/RDGWLBFE')]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 3389,
                            "backendPort": 3389,
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "alt-gw-p01-nic",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Network/loadBalancers/rdgwloadBalancer"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayIpRef'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadBalancer'),'/backendAddressPools/RDGWLBBAP')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','rdgwloadBalancer'),'/inboundNatRules/rdp')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[variables('dnsServerPrivateIp')]"
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "alt-cb-p01-nic",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "Microsoft.Network/loadBalancers/rdgwloadBalancer"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('brokerIpRef'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[variables('dnsServerPrivateIp')]"
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('alt-rdsh-p0', copyindex(1), '-nic')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdsh-nic-loop",
                "count": "[parameters('numberOfRdshInstances')]"
            },
            "dependsOn": [
                "Microsoft.Network/loadBalancers/rdgwloadBalancer"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "[variables('dnsServerPrivateIp')]"
                    ]
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "alt-gw-p01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]",
                "Microsoft.Network/networkInterfaces/alt-gw-p01-nic"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
                },
                "osProfile": {
                    "computerName": "alt-gw-p01",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','alt-gw-p01-os-disk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','alt-gw-p01-nic')]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2015-06-15",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "alt-gw-p01/gateway",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', 'alt-gw-p01')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
                            "ConfigurationFunction": "Configuration.ps1\\Gateway",
                            "Properties": {
                                "DomainName": "[parameters('adDomainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('alt-rdsh-p0', copyindex(1))]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdsh-vm-loop",
                "count": "[parameters('numberOfRdshInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]",
                "[concat('Microsoft.Network/networkInterfaces/', 'alt-rdsh-p0', copyindex(1), '-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('rdshVmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]"
                },
                "osProfile": {
                    "computerName": "[concat('alt-rdsh-p0', copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','alt-rdsh-p0',copyindex(1),'-os-disk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('alt-rdsh-p0', copyindex(1), '-nic'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "apiVersion": "2015-06-15",
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat('alt-rdsh-p0', copyindex(1),'/sessionhost')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat('alt-rdsh-p0', copyindex(1)))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
                            "ConfigurationFunction": "Configuration.ps1\\SessionHost",
                            "Properties": {
                                "DomainName": "[parameters('adDomainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "alt-cb-p01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]",
                "Microsoft.Network/networkInterfaces/alt-cb-p01-nic",
                "rdsh-vm-loop"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]"
                },
                "osProfile": {
                    "computerName": "alt-cb-p01",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','alt-cb-p01-os-disk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces','alt-cb-p01-nic')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "alt-cb-p01/rdsdeployment",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', 'alt-cb-p01')]",
                "Microsoft.Compute/virtualMachines/alt-gw-p01/extensions/gateway",
                "rdsh-vm-loop"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.11",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[concat(variables('assetLocation'),'/Configuration.zip')]",
                    "configurationFunction": "Configuration.ps1\\RDSDeployment",
                  "Properties": {
                    "adminCreds": {
                      "UserName": "[parameters('adminUsername')]",
                      "Password": "PrivateSettingsRef:adminPassword"
                    },
                    "connectionBroker": "[concat('alt-cb-p01.',parameters('adDomainName'))]",
                    "domainName": "[parameters('adDomainName')]",
                    "externalfqdn": "[reference(variables('gatewayIpRef')).dnsSettings.fqdn]",
                    "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]",
                    "sessionHostNamingPrefix": "alt-rdsh-p0",
                    "webAccessServer": "[concat('alt-gw-p01.',parameters('adDomainName'))]"
                  }
                },
                "protectedSettings": {
                    "Items": {
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                }
            }
        }
    ]
}